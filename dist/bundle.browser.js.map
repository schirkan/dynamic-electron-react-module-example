{"version":3,"file":"bundle.browser.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/browser/components/HelloWorld.tsx","../src/browser/index.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as SvgIcons from '@fortawesome/free-solid-svg-icons';\r\nimport * as FontAwesome from '@fortawesome/react-fontawesome';\r\nimport { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\nimport { IHelloService } from '../../common/interfaces/IHelloService';\r\n\r\nimport style from './HelloWorld.scss';\r\n// tslint:disable:no-string-literal\r\n\r\ninterface IHelloWorldOptions {\r\n  initialText: string;\r\n}\r\n\r\ninterface IHelloWorldState {\r\n  text: string;\r\n  error?: any;\r\n  inputValue: string;\r\n}\r\n\r\nexport class HelloWorld extends React.Component<IHelloWorldOptions, IHelloWorldState> {\r\n  public context: IReactronComponentContext;\r\n\r\n  constructor(props: IHelloWorldOptions) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: 'Service',\r\n      text: props.initialText\r\n    };\r\n\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  public onButtonClick() {\r\n    const helloService = this.context.getService<IHelloService>('HelloService');\r\n    if (!helloService) {\r\n      return;\r\n    }\r\n    try {\r\n      this.setState({ text: helloService.sayHello(this.state.inputValue) });\r\n    } catch (error) {\r\n      this.setState({ error });\r\n    }\r\n  }\r\n\r\n  public onChange(e: React.FormEvent<HTMLInputElement>) {\r\n    this.setState({ inputValue: e.currentTarget.value });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className={style[\"HelloWorld\"]}>\r\n        <div>\r\n          <FontAwesome.FontAwesomeIcon icon={SvgIcons.faThumbsUp} />\r\n          <span> {this.state.text}</span>\r\n        </div>\r\n        <span>Say Hello&nbsp;</span><input value={this.state.inputValue} onChange={this.onChange} />\r\n        <button onClick={this.onButtonClick}>from Service</button>\r\n        {this.state.error && <div className=\"error\">Error: {this.state.error}</div>}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport { HelloWorld } from './components/HelloWorld';\r\n\r\nexport const components: IReactronComponentDefinition[] = [{\r\n    component: HelloWorld,\r\n    description: 'Hello World Component with HelloService',\r\n    displayName: 'Hello World Component',\r\n    name: 'HelloWorld',\r\n    fields: [{\r\n        description: 'Text to display',\r\n        displayName: 'Text',\r\n        name: 'text',\r\n        valueType: 'string'\r\n    }]\r\n}];"],"names":["tslib_1.__extends","React.createElement","FontAwesome.FontAwesomeIcon","SvgIcons.faThumbsUp","React.Component"],"mappings":"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"}